// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: users.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package users;

@kotlin.jvm.JvmName("-initializeuserSubscriptionEntity")
public inline fun userSubscriptionEntity(block: users.UserSubscriptionEntityKt.Dsl.() -> kotlin.Unit): users.Users.UserSubscriptionEntity =
  users.UserSubscriptionEntityKt.Dsl._create(users.Users.UserSubscriptionEntity.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `users.UserSubscriptionEntity`
 */
public object UserSubscriptionEntityKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: users.Users.UserSubscriptionEntity.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: users.Users.UserSubscriptionEntity.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): users.Users.UserSubscriptionEntity = _builder.build()

    /**
     * `int64 id = 1;`
     */
    public var id: kotlin.Long
      @JvmName("getId")
      get() = _builder.getId()
      @JvmName("setId")
      set(value) {
        _builder.setId(value)
      }
    /**
     * `int64 id = 1;`
     */
    public fun clearId() {
      _builder.clearId()
    }

    /**
     * `.users.UsersEntity user = 2;`
     */
    public var user: users.Users.UsersEntity
      @JvmName("getUser")
      get() = _builder.getUser()
      @JvmName("setUser")
      set(value) {
        _builder.setUser(value)
      }
    /**
     * `.users.UsersEntity user = 2;`
     */
    public fun clearUser() {
      _builder.clearUser()
    }
    /**
     * `.users.UsersEntity user = 2;`
     * @return Whether the user field is set.
     */
    public fun hasUser(): kotlin.Boolean {
      return _builder.hasUser()
    }
    public val UserSubscriptionEntityKt.Dsl.userOrNull: users.Users.UsersEntity?
      get() = _builder.userOrNull

    /**
     * `.users.SubscriptionEntity subscription = 3;`
     */
    public var subscription: users.Users.SubscriptionEntity
      @JvmName("getSubscription")
      get() = _builder.getSubscription()
      @JvmName("setSubscription")
      set(value) {
        _builder.setSubscription(value)
      }
    /**
     * `.users.SubscriptionEntity subscription = 3;`
     */
    public fun clearSubscription() {
      _builder.clearSubscription()
    }
    /**
     * `.users.SubscriptionEntity subscription = 3;`
     * @return Whether the subscription field is set.
     */
    public fun hasSubscription(): kotlin.Boolean {
      return _builder.hasSubscription()
    }
    public val UserSubscriptionEntityKt.Dsl.subscriptionOrNull: users.Users.SubscriptionEntity?
      get() = _builder.subscriptionOrNull

    /**
     * `string start_date = 4;`
     */
    public var startDate: kotlin.String
      @JvmName("getStartDate")
      get() = _builder.getStartDate()
      @JvmName("setStartDate")
      set(value) {
        _builder.setStartDate(value)
      }
    /**
     * `string start_date = 4;`
     */
    public fun clearStartDate() {
      _builder.clearStartDate()
    }

    /**
     * `string end_date = 5;`
     */
    public var endDate: kotlin.String
      @JvmName("getEndDate")
      get() = _builder.getEndDate()
      @JvmName("setEndDate")
      set(value) {
        _builder.setEndDate(value)
      }
    /**
     * `string end_date = 5;`
     */
    public fun clearEndDate() {
      _builder.clearEndDate()
    }

    /**
     * `.users.SubscriptionStatus status = 6;`
     */
    public var status: users.Users.SubscriptionStatus
      @JvmName("getStatus")
      get() = _builder.getStatus()
      @JvmName("setStatus")
      set(value) {
        _builder.setStatus(value)
      }
    public var statusValue: kotlin.Int
      @JvmName("getStatusValue")
      get() = _builder.getStatusValue()
      @JvmName("setStatusValue")
      set(value) {
        _builder.setStatusValue(value)
      }
    /**
     * `.users.SubscriptionStatus status = 6;`
     */
    public fun clearStatus() {
      _builder.clearStatus()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun users.Users.UserSubscriptionEntity.copy(block: `users`.UserSubscriptionEntityKt.Dsl.() -> kotlin.Unit): users.Users.UserSubscriptionEntity =
  `users`.UserSubscriptionEntityKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val users.Users.UserSubscriptionEntityOrBuilder.userOrNull: users.Users.UsersEntity?
  get() = if (hasUser()) getUser() else null

public val users.Users.UserSubscriptionEntityOrBuilder.subscriptionOrNull: users.Users.SubscriptionEntity?
  get() = if (hasSubscription()) getSubscription() else null

