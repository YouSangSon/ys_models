// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: users.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package users;

@kotlin.jvm.JvmName("-initializesocialAccountEntity")
public inline fun socialAccountEntity(block: users.SocialAccountEntityKt.Dsl.() -> kotlin.Unit): users.Users.SocialAccountEntity =
  users.SocialAccountEntityKt.Dsl._create(users.Users.SocialAccountEntity.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `users.SocialAccountEntity`
 */
public object SocialAccountEntityKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: users.Users.SocialAccountEntity.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: users.Users.SocialAccountEntity.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): users.Users.SocialAccountEntity = _builder.build()

    /**
     * `int64 id = 1;`
     */
    public var id: kotlin.Long
      @JvmName("getId")
      get() = _builder.getId()
      @JvmName("setId")
      set(value) {
        _builder.setId(value)
      }
    /**
     * `int64 id = 1;`
     */
    public fun clearId() {
      _builder.clearId()
    }

    /**
     * `.users.UsersEntity user = 2;`
     */
    public var user: users.Users.UsersEntity
      @JvmName("getUser")
      get() = _builder.getUser()
      @JvmName("setUser")
      set(value) {
        _builder.setUser(value)
      }
    /**
     * `.users.UsersEntity user = 2;`
     */
    public fun clearUser() {
      _builder.clearUser()
    }
    /**
     * `.users.UsersEntity user = 2;`
     * @return Whether the user field is set.
     */
    public fun hasUser(): kotlin.Boolean {
      return _builder.hasUser()
    }
    public val SocialAccountEntityKt.Dsl.userOrNull: users.Users.UsersEntity?
      get() = _builder.userOrNull

    /**
     * `string provider = 3;`
     */
    public var provider: kotlin.String
      @JvmName("getProvider")
      get() = _builder.getProvider()
      @JvmName("setProvider")
      set(value) {
        _builder.setProvider(value)
      }
    /**
     * `string provider = 3;`
     */
    public fun clearProvider() {
      _builder.clearProvider()
    }

    /**
     * `string provider_id = 4;`
     */
    public var providerId: kotlin.String
      @JvmName("getProviderId")
      get() = _builder.getProviderId()
      @JvmName("setProviderId")
      set(value) {
        _builder.setProviderId(value)
      }
    /**
     * `string provider_id = 4;`
     */
    public fun clearProviderId() {
      _builder.clearProviderId()
    }

    /**
     * `string email = 5;`
     */
    public var email: kotlin.String
      @JvmName("getEmail")
      get() = _builder.getEmail()
      @JvmName("setEmail")
      set(value) {
        _builder.setEmail(value)
      }
    /**
     * `string email = 5;`
     */
    public fun clearEmail() {
      _builder.clearEmail()
    }

    /**
     * `string created_at = 6;`
     */
    public var createdAt: kotlin.String
      @JvmName("getCreatedAt")
      get() = _builder.getCreatedAt()
      @JvmName("setCreatedAt")
      set(value) {
        _builder.setCreatedAt(value)
      }
    /**
     * `string created_at = 6;`
     */
    public fun clearCreatedAt() {
      _builder.clearCreatedAt()
    }

    /**
     * `string updated_at = 7;`
     */
    public var updatedAt: kotlin.String
      @JvmName("getUpdatedAt")
      get() = _builder.getUpdatedAt()
      @JvmName("setUpdatedAt")
      set(value) {
        _builder.setUpdatedAt(value)
      }
    /**
     * `string updated_at = 7;`
     */
    public fun clearUpdatedAt() {
      _builder.clearUpdatedAt()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun users.Users.SocialAccountEntity.copy(block: `users`.SocialAccountEntityKt.Dsl.() -> kotlin.Unit): users.Users.SocialAccountEntity =
  `users`.SocialAccountEntityKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val users.Users.SocialAccountEntityOrBuilder.userOrNull: users.Users.UsersEntity?
  get() = if (hasUser()) getUser() else null

